// Icon bitmap definitions - David Thompson 2021

#define bat_pos 92
#define bat_width 35
#define bat_height 16
static uint8_t bat00_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 
  0x07, 0x01, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x04, 0x01, 
  0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 
  0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x07, 
  0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat10_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x1D, 0x00, 
  0x00, 0x00, 0x01, 0x1D, 0x00, 0x00, 0x00, 0x01, 0x1D, 0x00, 0x00, 0x00, 
  0x07, 0x1D, 0x00, 0x00, 0x00, 0x04, 0x1D, 0x00, 0x00, 0x00, 0x04, 0x1D, 
  0x00, 0x00, 0x00, 0x04, 0x1D, 0x00, 0x00, 0x00, 0x04, 0x1D, 0x00, 0x00, 
  0x00, 0x04, 0x1D, 0x00, 0x00, 0x00, 0x04, 0x1D, 0x00, 0x00, 0x00, 0x07, 
  0x1D, 0x00, 0x00, 0x00, 0x01, 0x1D, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat20_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0x00, 
  0x00, 0x00, 0x01, 0xFD, 0x00, 0x00, 0x00, 0x01, 0xFD, 0x00, 0x00, 0x00, 
  0x07, 0xFD, 0x00, 0x00, 0x00, 0x04, 0xFD, 0x00, 0x00, 0x00, 0x04, 0xFD, 
  0x00, 0x00, 0x00, 0x04, 0xFD, 0x00, 0x00, 0x00, 0x04, 0xFD, 0x00, 0x00, 
  0x00, 0x04, 0xFD, 0x00, 0x00, 0x00, 0x04, 0xFD, 0x00, 0x00, 0x00, 0x07, 
  0xFD, 0x00, 0x00, 0x00, 0x01, 0xFD, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat30_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0x07, 
  0x00, 0x00, 0x01, 0xFD, 0x07, 0x00, 0x00, 0x01, 0xFD, 0x07, 0x00, 0x00, 
  0x07, 0xFD, 0x07, 0x00, 0x00, 0x04, 0xFD, 0x07, 0x00, 0x00, 0x04, 0xFD, 
  0x07, 0x00, 0x00, 0x04, 0xFD, 0x07, 0x00, 0x00, 0x04, 0xFD, 0x07, 0x00, 
  0x00, 0x04, 0xFD, 0x07, 0x00, 0x00, 0x04, 0xFD, 0x07, 0x00, 0x00, 0x07, 
  0xFD, 0x07, 0x00, 0x00, 0x01, 0xFD, 0x07, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat40_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0x3F, 
  0x00, 0x00, 0x01, 0xFD, 0x3F, 0x00, 0x00, 0x01, 0xFD, 0x3F, 0x00, 0x00, 
  0x07, 0xFD, 0x3F, 0x00, 0x00, 0x04, 0xFD, 0x3F, 0x00, 0x00, 0x04, 0xFD, 
  0x3F, 0x00, 0x00, 0x04, 0xFD, 0x3F, 0x00, 0x00, 0x04, 0xFD, 0x3F, 0x00, 
  0x00, 0x04, 0xFD, 0x3F, 0x00, 0x00, 0x04, 0xFD, 0x3F, 0x00, 0x00, 0x07, 
  0xFD, 0x3F, 0x00, 0x00, 0x01, 0xFD, 0x3F, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat50_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0x01, 0x00, 0x01, 0xFD, 0xFF, 0x01, 0x00, 0x01, 0xFD, 0xFF, 0x01, 0x00, 
  0x07, 0xFD, 0xFF, 0x01, 0x00, 0x04, 0xFD, 0xFF, 0x01, 0x00, 0x04, 0xFD, 
  0xFF, 0x01, 0x00, 0x04, 0xFD, 0xFF, 0x01, 0x00, 0x04, 0xFD, 0xFF, 0x01, 
  0x00, 0x04, 0xFD, 0xFF, 0x01, 0x00, 0x04, 0xFD, 0xFF, 0x01, 0x00, 0x07, 
  0xFD, 0xFF, 0x01, 0x00, 0x01, 0xFD, 0xFF, 0x01, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat60_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0x0F, 0x00, 0x01, 0xFD, 0xFF, 0x0F, 0x00, 0x01, 0xFD, 0xFF, 0x0F, 0x00, 
  0x07, 0xFD, 0xFF, 0x0F, 0x00, 0x04, 0xFD, 0xFF, 0x0F, 0x00, 0x04, 0xFD, 
  0xFF, 0x0F, 0x00, 0x04, 0xFD, 0xFF, 0x0F, 0x00, 0x04, 0xFD, 0xFF, 0x0F, 
  0x00, 0x04, 0xFD, 0xFF, 0x0F, 0x00, 0x04, 0xFD, 0xFF, 0x0F, 0x00, 0x07, 
  0xFD, 0xFF, 0x0F, 0x00, 0x01, 0xFD, 0xFF, 0x0F, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat70_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0x7F, 0x00, 0x01, 0xFD, 0xFF, 0x7F, 0x00, 0x01, 0xFD, 0xFF, 0x7F, 0x00, 
  0x07, 0xFD, 0xFF, 0x7F, 0x00, 0x04, 0xFD, 0xFF, 0x7F, 0x00, 0x04, 0xFD, 
  0xFF, 0x7F, 0x00, 0x04, 0xFD, 0xFF, 0x7F, 0x00, 0x04, 0xFD, 0xFF, 0x7F, 
  0x00, 0x04, 0xFD, 0xFF, 0x7F, 0x00, 0x04, 0xFD, 0xFF, 0x7F, 0x00, 0x07, 
  0xFD, 0xFF, 0x7F, 0x00, 0x01, 0xFD, 0xFF, 0x7F, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };
  
static uint8_t bat80_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0xFF, 0x03, 0x01, 0xFD, 0xFF, 0xFF, 0x03, 0x01, 0xFD, 0xFF, 0xFF, 0x03, 
  0x07, 0xFD, 0xFF, 0xFF, 0x03, 0x04, 0xFD, 0xFF, 0xFF, 0x03, 0x04, 0xFD, 
  0xFF, 0xFF, 0x03, 0x04, 0xFD, 0xFF, 0xFF, 0x03, 0x04, 0xFD, 0xFF, 0xFF, 
  0x03, 0x04, 0xFD, 0xFF, 0xFF, 0x03, 0x04, 0xFD, 0xFF, 0xFF, 0x03, 0x07, 
  0xFD, 0xFF, 0xFF, 0x03, 0x01, 0xFD, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat90_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0xFF, 0x1F, 0x01, 0xFD, 0xFF, 0xFF, 0x1F, 0x01, 0xFD, 0xFF, 0xFF, 0x1F, 
  0x07, 0xFD, 0xFF, 0xFF, 0x1F, 0x04, 0xFD, 0xFF, 0xFF, 0x1F, 0x04, 0xFD, 
  0xFF, 0xFF, 0x1F, 0x04, 0xFD, 0xFF, 0xFF, 0x1F, 0x04, 0xFD, 0xFF, 0xFF, 
  0x1F, 0x04, 0xFD, 0xFF, 0xFF, 0x1F, 0x04, 0xFD, 0xFF, 0xFF, 0x1F, 0x07, 
  0xFD, 0xFF, 0xFF, 0x1F, 0x01, 0xFD, 0xFF, 0xFF, 0x1F, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

const uint8_t bat33_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0x0F, 
  0x00, 0x00, 0x01, 0xFD, 0x0F, 0x00, 0x00, 0x01, 0xFD, 0x0F, 0x00, 0x00, 
  0x07, 0xFD, 0x0F, 0x00, 0x00, 0x04, 0xFD, 0x0F, 0x00, 0x00, 0x04, 0xFD, 
  0x0F, 0x00, 0x00, 0x04, 0xFD, 0x0F, 0x00, 0x00, 0x04, 0xFD, 0x0F, 0x00, 
  0x00, 0x04, 0xFD, 0x0F, 0x00, 0x00, 0x04, 0xFD, 0x0F, 0x00, 0x00, 0x07, 
  0xFD, 0x0F, 0x00, 0x00, 0x01, 0xFD, 0x0F, 0x00, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat66_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0x3F, 0x00, 0x01, 0xFD, 0xFF, 0x3F, 0x00, 0x01, 0xFD, 0xFF, 0x3F, 0x00, 
  0x07, 0xFD, 0xFF, 0x3F, 0x00, 0x04, 0xFD, 0xFF, 0x3F, 0x00, 0x04, 0xFD, 
  0xFF, 0x3F, 0x00, 0x04, 0xFD, 0xFF, 0x3F, 0x00, 0x04, 0xFD, 0xFF, 0x3F, 
  0x00, 0x04, 0xFD, 0xFF, 0x3F, 0x00, 0x04, 0xFD, 0xFF, 0x3F, 0x00, 0x07, 
  0xFD, 0xFF, 0x3F, 0x00, 0x01, 0xFD, 0xFF, 0x3F, 0x00, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t bat100_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0xFF, 0x7F, 0x01, 0xFD, 0xFF, 0xFF, 0x7F, 0x01, 0xFD, 0xFF, 0xFF, 0x7F, 
  0x07, 0xFD, 0xFF, 0xFF, 0x7F, 0x04, 0xFD, 0xFF, 0xFF, 0xFF, 0x05, 0xFD, 
  0xFF, 0xFF, 0xFF, 0x05, 0xFD, 0xFF, 0xFF, 0xFF, 0x05, 0xFD, 0xFF, 0xFF, 
  0xFF, 0x05, 0xFD, 0xFF, 0xFF, 0x7F, 0x04, 0xFD, 0xFF, 0xFF, 0x7F, 0x07, 
  0xFD, 0xFF, 0xFF, 0x7F, 0x01, 0xFD, 0xFF, 0xFF, 0x7F, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

static uint8_t batcharging_bits[] = {
  0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFD, 0xFF, 
  0xFF, 0x7F, 0x01, 0xFD, 0x7F, 0xFC, 0x7F, 0x01, 0xFD, 0x1F, 0xFC, 0x7F, 
  0x07, 0xFD, 0x03, 0xF8, 0x7F, 0x04, 0x7D, 0x00, 0xF8, 0xFF, 0x05, 0x1D, 
  0x00, 0xF0, 0xFF, 0x05, 0xFD, 0x3F, 0x00, 0xE0, 0x05, 0xFD, 0x7F, 0x00, 
  0xF8, 0x05, 0xFD, 0x7F, 0x00, 0x7F, 0x04, 0xFD, 0xFF, 0xE0, 0x7F, 0x07, 
  0xFD, 0xFF, 0xF8, 0x7F, 0x01, 0xFD, 0xFF, 0xFF, 0x7F, 0x01, 0x01, 0x00, 
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, };

#define btlogo_pos 0
#define bt_width 11
#define bt_height 16
static uint8_t bt_bits[] = {
  0x60, 0x00, 0xA0, 0x00, 0x20, 0x01, 0x21, 0x02, 0x22, 0x01, 0xA4, 0x00, 
  0x68, 0x00, 0x30, 0x00, 0x30, 0x00, 0x68, 0x00, 0xA4, 0x00, 0x22, 0x01, 
  0x21, 0x02, 0x20, 0x01, 0xA0, 0x00, 0x60, 0x00, };

#define rssi_pos 11
#define rssi_width 15
#define rssi_height 16
static uint8_t rssi_1[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, };

static uint8_t rssi_2[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 
  0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x70, 0x07, 0x70, 0x07, 0x70, 0x07, 
  0x70, 0x07, 0x77, 0x07, 0x77, 0x07, 0x77, 0x07, };

static uint8_t rssi_3[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 
  0x70, 0x00, 0x77, 0x00, 0x77, 0x00, 0x77, 0x00, };

static uint8_t rssi_4[] = {
  0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x77, 0x00, 0x77, 
  0x00, 0x77, 0x00, 0x77, 0x00, 0x77, 0x70, 0x77, 0x70, 0x77, 0x70, 0x77, 
  0x70, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, };

#define icon_width 16
#define icon_height 16
#define drive_pos 27
static uint8_t drive_off_bits[] = {
  0xFF, 0xFF, 0x01, 0x80, 0x7D, 0x80, 0x85, 0x80, 0x85, 0x80, 0x85, 0x80, 
  0x85, 0x80, 0x85, 0x80, 0x7D, 0x80, 0x01, 0xB8, 0x01, 0x88, 0x01, 0x88, 
  0x01, 0x88, 0x01, 0x88, 0x01, 0x80, 0xFF, 0xFF, };

static uint8_t drive_on_bits[] = {
  0x00, 0x00, 0xFE, 0x7F, 0x82, 0x7F, 0x7A, 0x7F, 0x7A, 0x7F, 0x7A, 0x7F, 
  0x7A, 0x7F, 0x7A, 0x7F, 0x82, 0x7F, 0xFE, 0x47, 0xFE, 0x77, 0xFE, 0x77, 
  0xFE, 0x77, 0xFE, 0x77, 0xFE, 0x7F, 0x00, 0x00, };

#define mod_pos 43
static uint8_t mod_off_bits[] = {
  0xFF, 0xFF, 0x01, 0x80, 0x0D, 0x83, 0x0D, 0x83, 0x95, 0x82, 0xF5, 0x82, 
  0x65, 0xA2, 0x05, 0xA2, 0x05, 0xA2, 0x01, 0xB8, 0x01, 0xA4, 0x01, 0xA4, 
  0x01, 0xA4, 0x01, 0xB8, 0x01, 0x80, 0xFF, 0xFF, };

static uint8_t mod_on_bits[] = {
  0x00, 0x00, 0xFE, 0x7F, 0xF2, 0x7C, 0xF2, 0x7C, 0x6A, 0x7D, 0x0A, 0x7D, 
  0x9A, 0x5D, 0xFA, 0x5D, 0xFA, 0x5D, 0xFE, 0x47, 0xFE, 0x5B, 0xFE, 0x5B, 
  0xFE, 0x5B, 0xFE, 0x47, 0xFE, 0x7F, 0x00, 0x00, };

#define delay_pos 59
static uint8_t delay_off_bits[] = {
  0xFF, 0xFF, 0x01, 0x80, 0x7D, 0x80, 0x85, 0x80, 0x85, 0x80, 0x85, 0x80, 
  0x85, 0x80, 0x85, 0xA4, 0x7D, 0xA4, 0x01, 0xA4, 0x01, 0xA4, 0x01, 0xBC, 
  0x01, 0xA0, 0x01, 0xBC, 0x01, 0x80, 0xFF, 0xFF, };

static uint8_t delay_on_bits[] = {
  0x00, 0x00, 0xFE, 0x7F, 0x82, 0x7F, 0x7A, 0x7F, 0x7A, 0x7F, 0x7A, 0x7F, 
  0x7A, 0x7F, 0x7A, 0x5B, 0x82, 0x5B, 0xFE, 0x5B, 0xFE, 0x5B, 0xFE, 0x43, 
  0xFE, 0x5F, 0xFE, 0x43, 0xFE, 0x7F, 0x00, 0x00, };

#define rev_pos 75
static uint8_t rev_off_bits[] = {
  0xFF, 0xFF, 0x01, 0x80, 0x7D, 0x80, 0x45, 0x80, 0x45, 0x80, 0x3D, 0x80, 
  0x65, 0x80, 0x45, 0x80, 0xC5, 0xA2, 0x01, 0xA2, 0x01, 0x94, 0x01, 0x94, 
  0x01, 0x88, 0x01, 0x88, 0x01, 0x80, 0xFF, 0xFF, };

static uint8_t rev_on_bits[] = {
  0x00, 0x00, 0xFE, 0x7F, 0x82, 0x7F, 0xBA, 0x7F, 0xBA, 0x7F, 0xC2, 0x7F, 
  0x9A, 0x7F, 0xBA, 0x7F, 0x3A, 0x5D, 0xFE, 0x5D, 0xFE, 0x6B, 0xFE, 0x6B, 
  0xFE, 0x77, 0xFE, 0x77, 0xFE, 0x7F, 0x00, 0x00, };

#ifndef TWOCOLOUR
// Full-sized tuner version
#define tuner_width 128
#define tuner_height 64
static uint8_t tuner_bits[] =  {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 
  0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xC0, 0xFF, 0xE0, 0x0E, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x17, 0xE0, 0x0E, 0xF0, 0x1F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x10, 0xE0, 
  0x0E, 0x10, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0x0F, 0x10, 0xE0, 0x0E, 0x10, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0x10, 0xE0, 0x0E, 0x10, 0x80, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x03, 0x20, 0xE0, 
  0x0E, 0x08, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x06, 0x20, 0xE0, 0x0E, 0x08, 0xC0, 0xF8, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x03, 0x06, 0x20, 0xE0, 0x0E, 0x08, 0xC0, 0xC0, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x0C, 0x20, 0xE0, 
  0x0E, 0x08, 0x60, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
  0x00, 0x0C, 0x20, 0xE0, 0x0E, 0x08, 0x60, 0x00, 0x1E, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x7C, 0x00, 0x0C, 0x40, 0x00, 0x00, 0x04, 0x60, 0x00, 
  0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x30, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 
  0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0xE1, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0xC0, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 
  0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x0E, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
  0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x08, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x20, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x7C, 0x00, 0x00, 
  0x00, 0x00, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xEE, 0x00, 0x00, 0x00, 0x80, 0xC3, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x01, 0x00, 0x00, 0xC0, 0x81, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x83, 0x03, 0x00, 
  0x00, 0xC0, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xC0, 0x01, 0x03, 0x00, 0x00, 0x60, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x06, 0x00, 0x00, 0x70, 0x00, 0x1C, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0E, 0x00, 
  0x00, 0x38, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1C, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x5C, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 
  0x00, 0x8C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x33, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x00, 0x00, 0x07, 0x0C, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xE0, 0x00, 
  0x00, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0xC0, 0x00, 0x80, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xC0, 0x01, 0x80, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 
  0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xB0, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 
  0x30, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF8, 0x0C, 0x38, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x1C, 0x18, 0xC0, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x18, 
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0C, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xE0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 
  0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x7F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 
  0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xC0, 0x03, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 
  0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x0E, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x78, 0xC6, 0x07, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 
  0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x67, 0x06, 0x78, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x60, 
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x30, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 
  0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0C, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0xC0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x80, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 
  0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0xF8, 0xFF, 
  0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x80, 0x01, 0x00, 
  0x00, 0x00, 0xF8, 0xFF, };
#else
// Slim tuner version
#define tuner_width 128
#define tuner_height 48
static uint8_t tuner_bits[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0x70, 
  0x0E, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF8, 0x0F, 0x70, 0x0E, 0xF0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x08, 0x70, 0x0E, 0x10, 0xF0, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0x08, 0x70, 
  0x0E, 0x10, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFC, 0x01, 0x10, 0x70, 0x0E, 0x08, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x03, 0x03, 0x10, 0x70, 0x0E, 0x08, 0xC0, 0xC0, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x06, 0x10, 0x70, 
  0x0E, 0x08, 0x60, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
  0x00, 0x06, 0x10, 0x70, 0x0E, 0x08, 0x60, 0x00, 0x1E, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x4E, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
  0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x87, 0x00, 0x0C, 0x00, 0x00, 
  0x00, 0x00, 0x30, 0x00, 0xE1, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x81, 
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x81, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x40, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x38, 0x00, 0x00, 
  0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xEE, 0x00, 0x00, 0x00, 0x80, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x01, 0x00, 0x00, 0xC0, 0xC1, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x83, 0x03, 0x00, 
  0x00, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x00, 0x06, 0x00, 0x00, 0x70, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0E, 0x00, 0x00, 0x38, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 
  0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x34, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x06, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x60, 0x00, 
  0x00, 0x03, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x30, 0xC0, 0x00, 0x80, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xC0, 0x01, 0x80, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 
  0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x60, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xE0, 0x0F, 0x30, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x38, 0xFC, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x1C, 
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0xF0, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 
  0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0C, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xE0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 
  0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x0E, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x30, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xFE, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1C, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 
  0x86, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x70, 0x00, 0x00, 
  0x00, 0x00, 0xF8, 0x61, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0xC0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 
  0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 
  0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 
  0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0xF8, 0xFF, 
  };
#endif
  
// bitmaps (Copych's add-on 2022)
#define s_bt_width  9
#define s_bt_height 16
static uint8_t s_bt_bits[] = {
 0x00,0xfe,0x00,0xfe,0x78,0xfe,0x04,0xfe,0x38,0xfe,0x40,0xfe,
 0x3c,0xfe,0x00,0xfe,0x10,0xfe,0x30,0xfe,0x58,0xfe,0x30,0xfe,
 0x58,0xfe,0x30,0xfe,0x10,0xfe,0x00,0xfe};

#define a_bt_width  9
#define a_bt_height 16
static uint8_t a_bt_bits[] = {
 0x00,0xfe,0x00,0xfe,0x10,0xfe,0x28,0xfe,0x44,0xfe,0x7c,0xfe,
 0x44,0xfe,0x00,0xfe,0x10,0xfe,0x30,0xfe,0x58,0xfe,0x30,0xfe,
 0x58,0xfe,0x30,0xfe,0x10,0xfe,0x00,0xfe};

#define wifi_width  9
#define wifi_height 16
static uint8_t wifi_bits[] = {
 0x00,0xfe,0x00,0xfe,0x44,0xfe,0x54,0xfe,0x54,0xfe,0x28,0xfe,
 0x28,0xfe,0x00,0xfe,0x00,0xfe,0x7c,0xfe,0x82,0xfe,0x38,0xfe,
 0x44,0xfe,0x10,0xfe,0x00,0xfe,0x00,0xfe};

#define dr_width  16
#define dr_height 16
static uint8_t dr_bits[] = {
 0x00,0x00,0x00,0x00,0x7c,0x00,0x88,0x00,0x88,0x00,0x88,0x00,
 0x88,0x00,0x88,0x00,0x88,0x00,0x7c,0x1a,0x00,0x26,0x00,0x02,
 0x00,0x02,0x00,0x02,0x00,0x00,0x00,0x00};

#define md_width  16
#define md_height 16
static uint8_t md_bits[] = {
 0x00,0x00,0x00,0x00,0x04,0x01,0x8c,0x01,0x54,0x01,0x24,0x01,
 0x04,0x21,0x04,0x21,0x04,0x21,0x00,0x3c,0x00,0x22,0x00,0x22,
 0x00,0x22,0x00,0x3c,0x00,0x00,0x00,0x00};

#define rv_width  16
#define rv_height 16
static uint8_t rv_bits[] = {
 0x00,0x00,0x00,0x00,0x7c,0x00,0x84,0x00,0x84,0x00,0x84,0x00,
 0x7c,0x00,0x24,0x00,0x44,0x00,0x84,0x22,0x00,0x22,0x00,0x22,
 0x00,0x14,0x00,0x08,0x00,0x00,0x00,0x00};

#define dy_width  16
#define dy_height 16
static uint8_t dy_bits[] = {
 0x00,0x00,0x00,0x00,0x7c,0x00,0x88,0x00,0x88,0x00,0x88,0x00,
 0x88,0x00,0x88,0x00,0x88,0x22,0x7c,0x22,0x00,0x22,0x00,0x3c,
 0x00,0x20,0x00,0x1c,0x00,0x00,0x00,0x00};

#define mode_pr_width  30
#define mode_pr_height 5
static uint8_t mode_pr_bits[] = {
 0xef,0xbd,0xf7,0xfe,0x29,0x85,0x10,0xc8,0xef,0x9d,0x77,0xc8,
 0xa1,0x04,0x14,0xc8,0x21,0xbd,0xf7,0xc8};

#define mode_fx_width  30
#define mode_fx_height 5
static uint8_t mode_fx_bits[] = {
 0x00,0xbc,0x08,0xc0,0x00,0x84,0x0d,0xc0,0x00,0x1c,0x07,0xc0,
 0x00,0x84,0x0d,0xc0,0x00,0x84,0x08,0xc0};

#define mode_sc_width  30
#define mode_sc_height 5
static uint8_t mode_sc_bits[] = {
 0x78,0xef,0x45,0xcf,0x08,0x21,0x4c,0xc1,0x78,0xe1,0x54,0xc7,
 0x40,0x21,0x64,0xc1,0x78,0xef,0x45,0xcf};

#define chrg_width  9
#define chrg_height 16
static uint8_t chrg_bits[] = {
 0x00,0xfe,0x00,0xfe,0x00,0xfe,0xf8,0xfe,0x78,0xfe,0x3c,0xfe,
 0x1c,0xfe,0x7e,0xfe,0x38,0xfe,0x18,0xfe,0x0c,0xfe,0x04,0xfe,
 0x02,0xfe,0x00,0xfe,0x00,0xfe,0x00,0xfe};